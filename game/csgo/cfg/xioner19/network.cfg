// Max bytes/sec the host can receive data.
// Default: 786432
//
// >> Allows specifying game traffic bandwidth that online game servers are sent to the client during gameplay.
// <!> >> Lower bandwidth rate setting can help avoid packet loss if the Internet service provider or routers drop network packets.
// <!> >> Insufficient bandwidth rate can cause delayed network packets when the game server sends updates about players over the network to the client.
//
// <> Values:
// [MIN] 0.7 Mbps:  98304
//   |   1.0 Mbps: 131072
//   |   1.5 Mbps: 196608
//   |   2.0 Mbps: 262144
//   |   2.5 Mbps: 327680
//   |   3.0 Mbps: 393216
//   |   4.0 Mbps: 524288
//   |   5.0 Mbps: 655360
//   |   6.0 Mbps: 786432
// [MAX] 7.6 Mbps: 1000000
//
// <!> The cvar value '1000000' wrongly reports the bandwidth in-game as "Extremely restricted" when in fact it should be the highest one.
rate "1000000"

// Number of ticks of delay for server snapshots and user commands.
// Default: 0
//
// <> Values:
// 0: Deactivates the entity interpolation. For a stable connection (near to none packet loss).
// 1: Reduces entity interpolation times to a minimum. When experiencing a light loss or choke (light packet loss).
// 2: Interpolate over 2 snapshots to avoid issues where one snapshot is dropped once in a while. When experiencing a heavy loss or choke (high packet loss).
//
// <i> Common interpolation values calculated:
// Tickrate  64: cl_interp_ratio 0 / cl_updaterate 64  = lerp  0.000 ->  ~0.0ms interpolation time;
// Tickrate  64: cl_interp_ratio 1 / cl_updaterate 64  = lerp 15.625 -> ~15.6ms interpolation time;
// Tickrate  64: cl_interp_ratio 2 / cl_updaterate 64  = lerp 31.250 -> ~31.3ms interpolation time;
//
// <i> Extrapolation is performed by a game client when it encounters a lack of information from the server and insufficient interpolation history
// to estimate appropriate substitute values for the missing data. In such cases, the game client resorts to the least unfavorable option: it
// assumes that all objects will maintain their current direction and move in a perfectly straight line. However, this simplistic assumption
// rarely aligns with the actual movement of objects in reality. Consequently, when the next server update arrives, there are abrupt movements
// as objects suddenly relocate to their intended positions, resulting in noticeable jerks.
//
// >> Buffer snapshots from the server and commands from the client.
// <i> >> It decreases the amount of stuttering caused by packet loss but increases the effective ping time.
// <!> >> Controls the value of 'cl_interp_ratio' and by default 'cl_interp', which should not be modified directly.
cl_net_buffer_ticks "0"

// Makes the client to select a relay and communicate through that relay.
// Default: 0
//
// <> Values:
//  0: Use the connect method requested by GC.
// >0: Always use SDR if possible.
// <0: Always use direct UDP if possible
net_client_steamdatagram_enable_override "1"

// Quality of Service timeout (no response) in seconds.
// Default: 15
mm_session_search_qos_timeout "20"

// Longest preferred ping to dedicated servers for games.
// Default: 150
//
// >> Allows specifying max acceptable matchmaking ping when searching for a game on official matchmaking servers.
// <i> >> If there are official servers satisfying the ping setting, the matchmaking will always connect in a match hosted on those servers.
// <i> >> If there are no official servers near, the matchmaking will connect in a match hosted on the next nearest official server with a higher ping.
mm_dedicated_search_maxping "40"

// When performing CS:GO community matchmaking look for servers with at least so many human players.
// Default: 3
mm_csgo_community_search_players_min "3"

// Delay in seconds before the client will resend the 'connect' attempt.
// Default: 0.5
//
// <!> Works only before joining a server.
cl_resend "0.5"

// Delay in seconds without receiving a packet from the server before the client will disconnect itself.
// Default: 30
cl_timeout "30"

// Lobby default permissions.
// Default: 1
//
// <> Values:
// 0: Private
// 1: Public
lobby_default_privacy_bits2 "0"

// Users automatically advertise for invites.
// Default: 1
//
// <> Values:
// 0: Disabled
// 1: Last
// 2: Auto
ui_setting_advertiseforhire_auto "1"

// Advertise joinable game in progress to Steam friends, otherwise need a Steam invite.
// Default: 1
//
// <> Values:
// 0: None - Friends can join the game only when they get an invite.
// 1: Official servers - Friends can join the game only on official servers.
// 2: All servers - Friends can join the game on official and community servers.
cl_join_advertise "2"

// Ignore in-game invites from recent teammates or other non-friends.
// Default: 0
cl_invites_only_friends "0"

// Ignore all invites when user is playing a match.
// Default: 0
cl_invites_only_mainmenu "0"
